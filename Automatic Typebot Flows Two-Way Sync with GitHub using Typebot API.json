{"createdAt":"2025-10-20T12:05:00.969Z","updatedAt":"2025-10-20T17:24:36.041Z","id":"50Q2Ke0DfPBftUq9","name":"Automatic Typebot Flows Two-Way Sync with GitHub using Typebot API","active":false,"isArchived":true,"nodes":[{"parameters":{},"id":"e770fbf4-8c4f-4aaa-b722-3140ecec28f2","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[960,400],"typeVersion":1},{"parameters":{"content":"## Typebot Backup to GitHub \nThis workflow will backup all instance typebots to GitHub and also deleted it if was deleted in your typebot workspace.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **typebot.url:** default url or your self-hosted Typebot url\n- **typebot.workspace.id:** your Typebot workspace id\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups`:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n\nFor Typebot see its [documentation](https://docs.typebot.io/api-reference/how-to)\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.","height":601,"width":371,"color":4},"id":"49b53bc4-6441-4577-a851-bb7f2c580a39","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[368,240],"typeVersion":1},{"parameters":{"inputSource":"passthrough"},"id":"7dede05f-8c5a-426e-a822-d21b7e50d976","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[448,1392],"typeVersion":1.1},{"parameters":{"content":"## Main workflow loop","height":601,"width":1831,"color":7},"id":"7469a576-e3ea-4e55-93f3-7f380f1a57e7","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[768,240],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":941,"width":2231,"color":6},"id":"acb81c9e-152a-4bf3-ab23-1eb66e8d5510","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[368,864],"typeVersion":1},{"parameters":{"url":"={{ $json.typebot.url }}/api/v1/typebots","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendQuery":true,"queryParameters":{"parameters":[{"name":"workspaceId","value":"={{ $json.typebot.workspace.id }}"}]},"options":{}},"id":"6df6e830-5721-421f-9b46-f99f9164eb4d","name":"List Typebots","type":"n8n-nodes-base.httpRequest","position":[1392,512],"typeVersion":4.2,"credentials":{"httpBearerAuth":{"id":"cihAa0Gu5wsfRt58","name":"Bearer Auth account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8fbbf5fa-0455-4066-80e0-1b2885343aea","name":"typebot.url","type":"string","value":"={{ $('Globals').item.json.typebot.url }}"},{"id":"5e73d2e7-4b1a-4180-8af2-047e52eb8a0a","name":"repo.owner","type":"string","value":"={{ $('Globals').item.json.repo.owner }}"},{"id":"22445c28-5431-45a5-86ca-0ab2ff26cff5","name":"repo.name","type":"string","value":"={{ $('Globals').item.json.repo.name }}"},{"id":"232d9947-a43f-48a9-b385-da1aa8f5139e","name":"origin","type":"string","value":"typebot"}]},"includeOtherFields":true,"options":{}},"id":"3d44e0b2-c404-424a-8eba-7ec111738939","name":"typebot","type":"n8n-nodes-base.set","position":[1840,400],"typeVersion":3.4},{"parameters":{"url":"={{ $('Switch').item.json.typebot.url }}/api/v1/typebots/{{ $json.id }}","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","options":{}},"id":"4be16d80-43fd-4cc1-b79c-11fec3c76829","name":"Get Typebot","type":"n8n-nodes-base.httpRequest","position":[896,1120],"typeVersion":4.2,"credentials":{"httpBearerAuth":{"id":"cihAa0Gu5wsfRt58","name":"Bearer Auth account"}}},{"parameters":{"fieldToSplitOut":"typebots","options":{}},"id":"952f2ff9-0421-4239-947d-3d8f0b7925fd","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[1616,400],"typeVersion":1},{"parameters":{"mode":"raw","jsonOutput":"={{ $json.typebot }}","options":{}},"id":"ef97c1ec-d175-44b7-a462-2c8c2a8221ad","name":"Edit Fields","type":"n8n-nodes-base.set","position":[1120,1232],"typeVersion":3.4},{"parameters":{"content":"## Edit this node ðŸ‘‡","height":80,"width":150,"color":4},"id":"ef0cd866-afcd-41b9-8fad-15d79a88041e","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1152,368],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"45027581-a75b-4375-a0f1-ebfddb0531f7","name":"typebot.url","type":"string","value":"https://typebot.prd.votorantim.tmob.com.br"},{"id":"5513c8d4-1aba-45f3-ab8c-498fa36f5f59","name":"typebot.workspace.id","type":"string","value":"cm7dahbq50001c7m972ujn7jt"},{"id":"6cf546c5-5737-4dbd-851b-17d68e0a3780","name":"repo.owner","type":"string","value":"tmobolimpio"},{"id":"452efa28-2dc6-4ea3-a7a2-c35d100d0382","name":"repo.name","type":"string","value":"typebot-backup"}]},"options":{}},"id":"e68821d5-11ea-4324-9957-303433a8aad7","name":"Globals","type":"n8n-nodes-base.set","position":[1168,512],"typeVersion":3.4},{"parameters":{"rule":{"interval":[{"triggerAtHour":7}]}},"id":"3027c8bd-a477-4f47-a2a9-fd952d9f9698","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[960,608],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"5e73d2e7-4b1a-4180-8af2-047e52eb8a0a","name":"repo.owner","type":"string","value":"={{ $('Globals').item.json.repo.owner }}"},{"id":"22445c28-5431-45a5-86ca-0ab2ff26cff5","name":"repo.name","type":"string","value":"={{ $('Globals').item.json.repo.name }}"},{"id":"232d9947-a43f-48a9-b385-da1aa8f5139e","name":"origin","type":"string","value":"github"},{"id":"456ec816-8c15-498b-bbc5-a96abce95d59","name":"typebots","type":"array","value":"={{ $('List Typebots').item.json.typebots }}"}]},"includeOtherFields":true,"options":{}},"id":"caff32a5-6d82-43c9-998c-3258342d66b3","name":"github","type":"n8n-nodes-base.set","position":[1840,608],"typeVersion":3.4},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"}},"id":"4333f695-81d9-4c87-8d68-9a6245dc12d5","name":"List files","type":"n8n-nodes-base.github","position":[1616,608],"webhookId":"244ea8da-851f-4afb-980c-5e5973b6a1af","executeOnce":true,"typeVersion":1.1,"credentials":{"githubApi":{"id":"A0bTV6sk15RR8Xy9","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.name }}"},"filePath":"={{ $('Switch').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"7eab3efa-c3e0-420a-9fb8-9cd9ff52f90e","name":"Get file data","type":"n8n-nodes-base.github","position":[1120,1024],"webhookId":"5cf07ee9-70c6-48bf-b370-534315f2d48e","typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"A0bTV6sk15RR8Xy9","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.name }}"},"filePath":"={{$('Switch').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"typebot_data_stringy\"]}}","commitMessage":"={{$('Switch').first().json.name}} ({{$json.github_status}})"},"id":"5e01d7b1-c09d-494f-8df1-c241db278084","name":"Create new file","type":"n8n-nodes-base.github","position":[2208,928],"webhookId":"93cca36a-a5f4-4919-b655-e0fa2cc2ca36","typeVersion":1,"credentials":{"githubApi":{"id":"A0bTV6sk15RR8Xy9","name":"GitHub account"}}},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.name }}"},"filePath":"={{$('Switch').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"typebot_data_stringy\"]}}","commitMessage":"={{$('Switch').first().json.name}} ({{$json.github_status}})"},"id":"4b8b16d4-5363-4f08-b8b5-deac7f4250f3","name":"Edit existing file","type":"n8n-nodes-base.github","position":[2208,1120],"webhookId":"286cabce-a3ec-4202-9d94-d005502d73cc","typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"c2cb20ab-07e5-41a3-8f7d-ed6474977226","name":"Return","type":"n8n-nodes-base.set","position":[2432,1328],"typeVersion":3.3},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"delete","owner":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Switch').item.json.repo.name }}"},"filePath":"={{$('Switch').first().json.name}}","commitMessage":"={{$('Switch').first().json.name}} (deleted)"},"id":"7ce14355-b3b9-4cd0-a09e-6d91bfe6bfcc","name":"Delete a file","type":"n8n-nodes-base.github","position":[2208,1632],"webhookId":"592f888e-3e41-49ce-b88a-d73f8756eac8","typeVersion":1.1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"bb927e0c-f27b-4dce-80df-8d7611467045","operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{ $json.isDeleted }}","rightValue":""}]},"options":{}},"id":"c2252937-414f-446c-a2b1-96eef623f57e","name":"If","type":"n8n-nodes-base.if","position":[2000,1552],"typeVersion":2.2},{"parameters":{"jsCode":"const flow = $input.first().json.typebots;\n\nconst some = flow.some(x => x.id === $input.first().json.name.split(\".\")[0])\n\nreturn [{json: { isDeleted: !some }}];"},"id":"10146994-a24f-4d9e-955d-f3e76f4abae0","name":"isDeleted","type":"n8n-nodes-base.code","position":[1776,1552],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origFlow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const typebotFlow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origFlow);\n  const orderedActual = orderJsonKeys(typebotFlow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.typebot_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origFlow = JSON.parse($input.all()[0].json.data);\n  const typebotFlow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origFlow);\n  const orderedActual = orderJsonKeys(typebotFlow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.typebot_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const typebotFlow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(typebotFlow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.typebot_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"},"id":"d692e133-5184-4753-bbab-751f9903b1cb","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[1552,1120],"typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"aea200f9-9f83-4e4e-a965-65fddcbb6a5f","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{$json.github_status}}","rightValue":"new"}]},"renameOutput":true,"outputKey":"new"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"706ebf35-6f74-43b6-9f98-94cf14107947","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{$json.github_status}}","rightValue":"different"}]},"renameOutput":true,"outputKey":"different"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"30c8c5a8-269f-424a-93ed-d2cbe52acf7c","operator":{"type":"string","operation":"equals"},"leftValue":"={{$json.github_status}}","rightValue":"same"}]},"renameOutput":true,"outputKey":"same"}]},"options":{}},"id":"bcafd96c-6fd4-44ce-b975-33c7cf2dff84","name":"Check Status","type":"n8n-nodes-base.switch","position":[1776,1120],"typeVersion":3.2},{"parameters":{},"id":"aaf2d938-ec55-4152-9e34-a2e2e6769760","name":"File is different","type":"n8n-nodes-base.noOp","position":[2000,1120],"typeVersion":1},{"parameters":{},"id":"f2759b0f-3ec3-434f-acfe-36c10ebb35bb","name":"File is new","type":"n8n-nodes-base.noOp","position":[2000,928],"typeVersion":1},{"parameters":{},"id":"785fff83-40c4-4d38-9300-369e68779412","name":"File is same","type":"n8n-nodes-base.noOp","position":[2000,1328],"typeVersion":1},{"parameters":{},"id":"54804b0b-0001-4a41-afb5-12c0c6cf653c","name":"Merge","type":"n8n-nodes-base.merge","position":[1328,1120],"typeVersion":3.2},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"8f6b31b0-a75c-4299-a530-d15b3ff65c9a","operator":{"type":"string","operation":"equals"},"leftValue":"={{ $json.origin }}","rightValue":"typebot"}]},"renameOutput":true,"outputKey":"typebot"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"09e36861-1120-4343-8d38-4797e9d67eec","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.origin }}","rightValue":"github"}]},"renameOutput":true,"outputKey":"github"}]},"options":{}},"id":"b9cb042f-d767-4c2a-86f8-5d567d23c32a","name":"Switch","type":"n8n-nodes-base.switch","position":[672,1392],"typeVersion":3.2},{"parameters":{"options":{"reset":"={{ $node[\"Loop Over Items\"].context[\"done\"] }}"}},"id":"eb4adeea-418b-4d2d-a8ce-36739c195d7e","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[2048,512],"typeVersion":3},{"parameters":{"workflowId":{"__rl":true,"mode":"id","value":"={{ $workflow.id }}"},"workflowInputs":{"value":{},"schema":[],"mappingMode":"defineBelow","matchingColumns":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{}},"id":"58fb33e4-520e-4a58-b3ea-acdb5ef02208","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[2272,512],"typeVersion":1.2},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2480,512],"id":"9bb77a0b-c155-4b77-a76a-5f8b9dc82252","name":"Wait","webhookId":"d3786e61-a802-450c-a72e-cdad9eb03150"}],"connections":{"If":{"main":[[{"node":"Delete a file","type":"main","index":0}],[{"node":"Return","type":"main","index":0}]]},"Merge":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Get Typebot","type":"main","index":0}],[{"node":"isDeleted","type":"main","index":0}]]},"github":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Globals":{"main":[[{"node":"List Typebots","type":"main","index":0}]]},"typebot":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"typebot","type":"main","index":0}]]},"isDeleted":{"main":[[{"node":"If","type":"main","index":0}]]},"List files":{"main":[[{"node":"github","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Merge","type":"main","index":1}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Get Typebot":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Edit Fields","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"File is new","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is same","type":"main","index":0}]]},"File is same":{"main":[[{"node":"Return","type":"main","index":0}]]},"Delete a file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"Merge","type":"main","index":0}]]},"List Typebots":{"main":[[{"node":"List files","type":"main","index":0},{"node":"Split Out","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Globals","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Globals","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateId":"5899"},"pinData":{"Execute Workflow Trigger":[{"json":{"name":"Meu typebot","icon":null,"id":"932724e4-451b-43ad-9f0d-300b9d8d05d6","accessRight":"write","typebot":{"url":"https://typebot.prd.votorantim.tmob.com.br"},"repo":{"owner":"tmobolimpio","name":"typebot-backup"},"origin":"typebot"}}]},"versionId":"edbc33a1-aa65-416b-9d9a-d1184c3b44dd","triggerCount":0,"tags":[]}